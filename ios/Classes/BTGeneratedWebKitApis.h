// Copyright 2013 The Flutter Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Autogenerated from Pigeon (v3.1.5), do not edit directly.
// See also: https://pub.dev/packages/pigeon
#import <Foundation/Foundation.h>
@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

typedef NS_ENUM(NSUInteger, BTNSKeyValueObservingOptionsEnum) {
  BTNSKeyValueObservingOptionsEnumNewValue = 0,
  BTNSKeyValueObservingOptionsEnumOldValue = 1,
  BTNSKeyValueObservingOptionsEnumInitialValue = 2,
  BTNSKeyValueObservingOptionsEnumPriorNotification = 3,
};

typedef NS_ENUM(NSUInteger, BTNSKeyValueChangeEnum) {
  BTNSKeyValueChangeEnumSetting = 0,
  BTNSKeyValueChangeEnumInsertion = 1,
  BTNSKeyValueChangeEnumRemoval = 2,
  BTNSKeyValueChangeEnumReplacement = 3,
};

typedef NS_ENUM(NSUInteger, BTNSKeyValueChangeKeyEnum) {
  BTNSKeyValueChangeKeyEnumIndexes = 0,
  BTNSKeyValueChangeKeyEnumKind = 1,
  BTNSKeyValueChangeKeyEnumNewValue = 2,
  BTNSKeyValueChangeKeyEnumNotificationIsPrior = 3,
  BTNSKeyValueChangeKeyEnumOldValue = 4,
};

typedef NS_ENUM(NSUInteger, BTWKUserScriptInjectionTimeEnum) {
  BTWKUserScriptInjectionTimeEnumAtDocumentStart = 0,
  BTWKUserScriptInjectionTimeEnumAtDocumentEnd = 1,
};

typedef NS_ENUM(NSUInteger, BTWKAudiovisualMediaTypeEnum) {
  BTWKAudiovisualMediaTypeEnumNone = 0,
  BTWKAudiovisualMediaTypeEnumAudio = 1,
  BTWKAudiovisualMediaTypeEnumVideo = 2,
  BTWKAudiovisualMediaTypeEnumAll = 3,
};

typedef NS_ENUM(NSUInteger, BTWKWebsiteDataTypeEnum) {
  BTWKWebsiteDataTypeEnumCookies = 0,
  BTWKWebsiteDataTypeEnumMemoryCache = 1,
  BTWKWebsiteDataTypeEnumDiskCache = 2,
  BTWKWebsiteDataTypeEnumOfflineWebApplicationCache = 3,
  BTWKWebsiteDataTypeEnumLocalStorage = 4,
  BTWKWebsiteDataTypeEnumSessionStorage = 5,
  BTWKWebsiteDataTypeEnumWebSQLDatabases = 6,
  BTWKWebsiteDataTypeEnumIndexedDBDatabases = 7,
};

typedef NS_ENUM(NSUInteger, BTWKNavigationActionPolicyEnum) {
  BTWKNavigationActionPolicyEnumAllow = 0,
  BTWKNavigationActionPolicyEnumCancel = 1,
};

typedef NS_ENUM(NSUInteger, BTNSHttpCookiePropertyKeyEnum) {
  BTNSHttpCookiePropertyKeyEnumComment = 0,
  BTNSHttpCookiePropertyKeyEnumCommentUrl = 1,
  BTNSHttpCookiePropertyKeyEnumDiscard = 2,
  BTNSHttpCookiePropertyKeyEnumDomain = 3,
  BTNSHttpCookiePropertyKeyEnumExpires = 4,
  BTNSHttpCookiePropertyKeyEnumMaximumAge = 5,
  BTNSHttpCookiePropertyKeyEnumName = 6,
  BTNSHttpCookiePropertyKeyEnumOriginUrl = 7,
  BTNSHttpCookiePropertyKeyEnumPath = 8,
  BTNSHttpCookiePropertyKeyEnumPort = 9,
  BTNSHttpCookiePropertyKeyEnumSameSitePolicy = 10,
  BTNSHttpCookiePropertyKeyEnumSecure = 11,
  BTNSHttpCookiePropertyKeyEnumValue = 12,
  BTNSHttpCookiePropertyKeyEnumVersion = 13,
};

@class BTNSKeyValueObservingOptionsEnumData;
@class BTNSKeyValueChangeKeyEnumData;
@class BTWKUserScriptInjectionTimeEnumData;
@class BTWKAudiovisualMediaTypeEnumData;
@class BTWKWebsiteDataTypeEnumData;
@class BTWKNavigationActionPolicyEnumData;
@class BTNSHttpCookiePropertyKeyEnumData;
@class BTNSUrlRequestData;
@class BTWKUserScriptData;
@class BTWKNavigationActionData;
@class BTWKFrameInfoData;
@class BTNSErrorData;
@class BTWKScriptMessageData;
@class BTNSHttpCookieData;

@interface BTNSKeyValueObservingOptionsEnumData : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithValue:(BTNSKeyValueObservingOptionsEnum)value;
@property(nonatomic, assign) BTNSKeyValueObservingOptionsEnum value;
@end

@interface BTNSKeyValueChangeKeyEnumData : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithValue:(BTNSKeyValueChangeKeyEnum)value;
@property(nonatomic, assign) BTNSKeyValueChangeKeyEnum value;
@end

@interface BTWKUserScriptInjectionTimeEnumData : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithValue:(BTWKUserScriptInjectionTimeEnum)value;
@property(nonatomic, assign) BTWKUserScriptInjectionTimeEnum value;
@end

@interface BTWKAudiovisualMediaTypeEnumData : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithValue:(BTWKAudiovisualMediaTypeEnum)value;
@property(nonatomic, assign) BTWKAudiovisualMediaTypeEnum value;
@end

@interface BTWKWebsiteDataTypeEnumData : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithValue:(BTWKWebsiteDataTypeEnum)value;
@property(nonatomic, assign) BTWKWebsiteDataTypeEnum value;
@end

@interface BTWKNavigationActionPolicyEnumData : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithValue:(BTWKNavigationActionPolicyEnum)value;
@property(nonatomic, assign) BTWKNavigationActionPolicyEnum value;
@end

@interface BTNSHttpCookiePropertyKeyEnumData : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithValue:(BTNSHttpCookiePropertyKeyEnum)value;
@property(nonatomic, assign) BTNSHttpCookiePropertyKeyEnum value;
@end

@interface BTNSUrlRequestData : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithUrl:(NSString *)url
                 httpMethod:(nullable NSString *)httpMethod
                   httpBody:(nullable FlutterStandardTypedData *)httpBody
        allHttpHeaderFields:(NSDictionary<NSString *, NSString *> *)allHttpHeaderFields;
@property(nonatomic, copy) NSString *url;
@property(nonatomic, copy, nullable) NSString *httpMethod;
@property(nonatomic, strong, nullable) FlutterStandardTypedData *httpBody;
@property(nonatomic, strong) NSDictionary<NSString *, NSString *> *allHttpHeaderFields;
@end

@interface BTWKUserScriptData : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithSource:(NSString *)source
                 injectionTime:(nullable BTWKUserScriptInjectionTimeEnumData *)injectionTime
               isMainFrameOnly:(NSNumber *)isMainFrameOnly;
@property(nonatomic, copy) NSString *source;
@property(nonatomic, strong, nullable) BTWKUserScriptInjectionTimeEnumData *injectionTime;
@property(nonatomic, strong) NSNumber *isMainFrameOnly;
@end

@interface BTWKNavigationActionData : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithRequest:(BTNSUrlRequestData *)request
                    targetFrame:(BTWKFrameInfoData *)targetFrame;
@property(nonatomic, strong) BTNSUrlRequestData *request;
@property(nonatomic, strong) BTWKFrameInfoData *targetFrame;
@end

@interface BTWKFrameInfoData : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithIsMainFrame:(NSNumber *)isMainFrame;
@property(nonatomic, strong) NSNumber *isMainFrame;
@end

@interface BTNSErrorData : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithCode:(NSNumber *)code
                      domain:(NSString *)domain
        localizedDescription:(NSString *)localizedDescription;
@property(nonatomic, strong) NSNumber *code;
@property(nonatomic, copy) NSString *domain;
@property(nonatomic, copy) NSString *localizedDescription;
@end

@interface BTWKScriptMessageData : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithName:(NSString *)name body:(id)body;
@property(nonatomic, copy) NSString *name;
@property(nonatomic, strong) id body;
@end

@interface BTNSHttpCookieData : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithPropertyKeys:(NSArray<BTNSHttpCookiePropertyKeyEnumData *> *)propertyKeys
                      propertyValues:(NSArray<id> *)propertyValues;
@property(nonatomic, strong) NSArray<BTNSHttpCookiePropertyKeyEnumData *> *propertyKeys;
@property(nonatomic, strong) NSArray<id> *propertyValues;
@end

/// The codec used by BTWKWebsiteDataStoreHostApi.
NSObject<FlutterMessageCodec> *BTWKWebsiteDataStoreHostApiGetCodec(void);

@protocol BTWKWebsiteDataStoreHostApi
- (void)createFromWebViewConfigurationWithIdentifier:(NSNumber *)identifier
                             configurationIdentifier:(NSNumber *)configurationIdentifier
                                               error:(FlutterError *_Nullable *_Nonnull)error;
- (void)createDefaultDataStoreWithIdentifier:(NSNumber *)identifier
                                       error:(FlutterError *_Nullable *_Nonnull)error;
- (void)removeDataFromDataStoreWithIdentifier:(NSNumber *)identifier
                                      ofTypes:(NSArray<BTWKWebsiteDataTypeEnumData *> *)dataTypes
                                modifiedSince:(NSNumber *)modificationTimeInSecondsSinceEpoch
                                   completion:(void (^)(NSNumber *_Nullable,
                                                        FlutterError *_Nullable))completion;
@end

extern void BTWKWebsiteDataStoreHostApiSetup(
    id<FlutterBinaryMessenger> binaryMessenger,
    NSObject<BTWKWebsiteDataStoreHostApi> *_Nullable api);

/// The codec used by BTUIViewHostApi.
NSObject<FlutterMessageCodec> *BTUIViewHostApiGetCodec(void);

@protocol BTUIViewHostApi
- (void)setBackgroundColorForViewWithIdentifier:(NSNumber *)identifier
                                        toValue:(nullable NSNumber *)value
                                          error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setOpaqueForViewWithIdentifier:(NSNumber *)identifier
                              isOpaque:(NSNumber *)opaque
                                 error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void BTUIViewHostApiSetup(id<FlutterBinaryMessenger> binaryMessenger,
                                  NSObject<BTUIViewHostApi> *_Nullable api);

/// The codec used by BTUIScrollViewHostApi.
NSObject<FlutterMessageCodec> *BTUIScrollViewHostApiGetCodec(void);

@protocol BTUIScrollViewHostApi
- (void)createFromWebViewWithIdentifier:(NSNumber *)identifier
                      webViewIdentifier:(NSNumber *)webViewIdentifier
                                  error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable NSArray<NSNumber *> *)
    contentOffsetForScrollViewWithIdentifier:(NSNumber *)identifier
                                       error:(FlutterError *_Nullable *_Nonnull)error;
- (void)scrollByForScrollViewWithIdentifier:(NSNumber *)identifier
                                          x:(NSNumber *)x
                                          y:(NSNumber *)y
                                      error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setContentOffsetForScrollViewWithIdentifier:(NSNumber *)identifier
                                                toX:(NSNumber *)x
                                                  y:(NSNumber *)y
                                              error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void BTUIScrollViewHostApiSetup(id<FlutterBinaryMessenger> binaryMessenger,
                                        NSObject<BTUIScrollViewHostApi> *_Nullable api);

/// The codec used by BTWKWebViewConfigurationHostApi.
NSObject<FlutterMessageCodec> *BTWKWebViewConfigurationHostApiGetCodec(void);

@protocol BTWKWebViewConfigurationHostApi
- (void)createWithIdentifier:(NSNumber *)identifier error:(FlutterError *_Nullable *_Nonnull)error;
- (void)createFromWebViewWithIdentifier:(NSNumber *)identifier
                      webViewIdentifier:(NSNumber *)webViewIdentifier
                                  error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setAllowsInlineMediaPlaybackForConfigurationWithIdentifier:(NSNumber *)identifier
                                                         isAllowed:(NSNumber *)allow
                                                             error:
                                                                 (FlutterError *_Nullable *_Nonnull)
                                                                     error;
- (void)
    setMediaTypesRequiresUserActionForConfigurationWithIdentifier:(NSNumber *)identifier
                                                         forTypes:
                                                             (NSArray<
                                                                 BTWKAudiovisualMediaTypeEnumData
                                                                     *> *)types
                                                            error:
                                                                (FlutterError *_Nullable *_Nonnull)
                                                                    error;
@end

extern void BTWKWebViewConfigurationHostApiSetup(
    id<FlutterBinaryMessenger> binaryMessenger,
    NSObject<BTWKWebViewConfigurationHostApi> *_Nullable api);

/// The codec used by BTWKWebViewConfigurationFlutterApi.
NSObject<FlutterMessageCodec> *BTWKWebViewConfigurationFlutterApiGetCodec(void);

@interface BTWKWebViewConfigurationFlutterApi : NSObject
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger;
- (void)createWithIdentifier:(NSNumber *)identifier
                  completion:(void (^)(NSError *_Nullable))completion;
@end
/// The codec used by BTWKUserContentControllerHostApi.
NSObject<FlutterMessageCodec> *BTWKUserContentControllerHostApiGetCodec(void);

@protocol BTWKUserContentControllerHostApi
- (void)createFromWebViewConfigurationWithIdentifier:(NSNumber *)identifier
                             configurationIdentifier:(NSNumber *)configurationIdentifier
                                               error:(FlutterError *_Nullable *_Nonnull)error;
- (void)addScriptMessageHandlerForControllerWithIdentifier:(NSNumber *)identifier
                                         handlerIdentifier:(NSNumber *)handlerIdentifier
                                                    ofName:(NSString *)name
                                                     error:(FlutterError *_Nullable *_Nonnull)error;
- (void)removeScriptMessageHandlerForControllerWithIdentifier:(NSNumber *)identifier
                                                         name:(NSString *)name
                                                        error:(FlutterError *_Nullable *_Nonnull)
                                                                  error;
- (void)removeAllScriptMessageHandlersForControllerWithIdentifier:(NSNumber *)identifier
                                                            error:
                                                                (FlutterError *_Nullable *_Nonnull)
                                                                    error;
- (void)addUserScriptForControllerWithIdentifier:(NSNumber *)identifier
                                      userScript:(BTWKUserScriptData *)userScript
                                           error:(FlutterError *_Nullable *_Nonnull)error;
- (void)removeAllUserScriptsForControllerWithIdentifier:(NSNumber *)identifier
                                                  error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void BTWKUserContentControllerHostApiSetup(
    id<FlutterBinaryMessenger> binaryMessenger,
    NSObject<BTWKUserContentControllerHostApi> *_Nullable api);

/// The codec used by BTWKPreferencesHostApi.
NSObject<FlutterMessageCodec> *BTWKPreferencesHostApiGetCodec(void);

@protocol BTWKPreferencesHostApi
- (void)createFromWebViewConfigurationWithIdentifier:(NSNumber *)identifier
                             configurationIdentifier:(NSNumber *)configurationIdentifier
                                               error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setJavaScriptEnabledForPreferencesWithIdentifier:(NSNumber *)identifier
                                               isEnabled:(NSNumber *)enabled
                                                   error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void BTWKPreferencesHostApiSetup(id<FlutterBinaryMessenger> binaryMessenger,
                                         NSObject<BTWKPreferencesHostApi> *_Nullable api);

/// The codec used by BTWKScriptMessageHandlerHostApi.
NSObject<FlutterMessageCodec> *BTWKScriptMessageHandlerHostApiGetCodec(void);

@protocol BTWKScriptMessageHandlerHostApi
- (void)createWithIdentifier:(NSNumber *)identifier error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void BTWKScriptMessageHandlerHostApiSetup(
    id<FlutterBinaryMessenger> binaryMessenger,
    NSObject<BTWKScriptMessageHandlerHostApi> *_Nullable api);

/// The codec used by BTWKScriptMessageHandlerFlutterApi.
NSObject<FlutterMessageCodec> *BTWKScriptMessageHandlerFlutterApiGetCodec(void);

@interface BTWKScriptMessageHandlerFlutterApi : NSObject
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger;
- (void)didReceiveScriptMessageForHandlerWithIdentifier:(NSNumber *)identifier
                        userContentControllerIdentifier:(NSNumber *)userContentControllerIdentifier
                                                message:(BTWKScriptMessageData *)message
                                             completion:(void (^)(NSError *_Nullable))completion;
@end
/// The codec used by BTWKNavigationDelegateHostApi.
NSObject<FlutterMessageCodec> *BTWKNavigationDelegateHostApiGetCodec(void);

@protocol BTWKNavigationDelegateHostApi
- (void)createWithIdentifier:(NSNumber *)identifier error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void BTWKNavigationDelegateHostApiSetup(
    id<FlutterBinaryMessenger> binaryMessenger,
    NSObject<BTWKNavigationDelegateHostApi> *_Nullable api);

/// The codec used by BTWKNavigationDelegateFlutterApi.
NSObject<FlutterMessageCodec> *BTWKNavigationDelegateFlutterApiGetCodec(void);

@interface BTWKNavigationDelegateFlutterApi : NSObject
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger;
- (void)didFinishNavigationForDelegateWithIdentifier:(NSNumber *)identifier
                                   webViewIdentifier:(NSNumber *)webViewIdentifier
                                                 URL:(nullable NSString *)url
                                          completion:(void (^)(NSError *_Nullable))completion;
- (void)didStartProvisionalNavigationForDelegateWithIdentifier:(NSNumber *)identifier
                                             webViewIdentifier:(NSNumber *)webViewIdentifier
                                                           URL:(nullable NSString *)url
                                                    completion:
                                                        (void (^)(NSError *_Nullable))completion;
- (void)
    decidePolicyForNavigationActionForDelegateWithIdentifier:(NSNumber *)identifier
                                           webViewIdentifier:(NSNumber *)webViewIdentifier
                                            navigationAction:
                                                (BTWKNavigationActionData *)navigationAction
                                                  completion:
                                                      (void (^)(BTWKNavigationActionPolicyEnumData
                                                                    *_Nullable,
                                                                NSError *_Nullable))completion;
- (void)didFailNavigationForDelegateWithIdentifier:(NSNumber *)identifier
                                 webViewIdentifier:(NSNumber *)webViewIdentifier
                                             error:(BTNSErrorData *)error
                                        completion:(void (^)(NSError *_Nullable))completion;
- (void)didFailProvisionalNavigationForDelegateWithIdentifier:(NSNumber *)identifier
                                            webViewIdentifier:(NSNumber *)webViewIdentifier
                                                        error:(BTNSErrorData *)error
                                                   completion:
                                                       (void (^)(NSError *_Nullable))completion;
- (void)webViewWebContentProcessDidTerminateForDelegateWithIdentifier:(NSNumber *)identifier
                                                    webViewIdentifier:(NSNumber *)webViewIdentifier
                                                           completion:(void (^)(NSError *_Nullable))
                                                                          completion;
@end
/// The codec used by BTNSObjectHostApi.
NSObject<FlutterMessageCodec> *BTNSObjectHostApiGetCodec(void);

@protocol BTNSObjectHostApi
- (void)disposeObjectWithIdentifier:(NSNumber *)identifier
                              error:(FlutterError *_Nullable *_Nonnull)error;
- (void)addObserverForObjectWithIdentifier:(NSNumber *)identifier
                        observerIdentifier:(NSNumber *)observerIdentifier
                                   keyPath:(NSString *)keyPath
                                   options:
                                       (NSArray<BTNSKeyValueObservingOptionsEnumData *> *)options
                                     error:(FlutterError *_Nullable *_Nonnull)error;
- (void)removeObserverForObjectWithIdentifier:(NSNumber *)identifier
                           observerIdentifier:(NSNumber *)observerIdentifier
                                      keyPath:(NSString *)keyPath
                                        error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void BTNSObjectHostApiSetup(id<FlutterBinaryMessenger> binaryMessenger,
                                    NSObject<BTNSObjectHostApi> *_Nullable api);

/// The codec used by BTNSObjectFlutterApi.
NSObject<FlutterMessageCodec> *BTNSObjectFlutterApiGetCodec(void);

@interface BTNSObjectFlutterApi : NSObject
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger;
- (void)observeValueForObjectWithIdentifier:(NSNumber *)identifier
                                    keyPath:(NSString *)keyPath
                           objectIdentifier:(NSNumber *)objectIdentifier
                                 changeKeys:(NSArray<BTNSKeyValueChangeKeyEnumData *> *)changeKeys
                               changeValues:(NSArray<id> *)changeValues
                                 completion:(void (^)(NSError *_Nullable))completion;
- (void)disposeObjectWithIdentifier:(NSNumber *)identifier
                         completion:(void (^)(NSError *_Nullable))completion;
@end
/// The codec used by BTWKWebViewHostApi.
NSObject<FlutterMessageCodec> *BTWKWebViewHostApiGetCodec(void);

@protocol BTWKWebViewHostApi
- (void)createWithIdentifier:(NSNumber *)identifier
     configurationIdentifier:(NSNumber *)configurationIdentifier
                       error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setUIDelegateForWebViewWithIdentifier:(NSNumber *)identifier
                           delegateIdentifier:(nullable NSNumber *)uiDelegateIdentifier
                                        error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setNavigationDelegateForWebViewWithIdentifier:(NSNumber *)identifier
                                   delegateIdentifier:
                                       (nullable NSNumber *)navigationDelegateIdentifier
                                                error:(FlutterError *_Nullable *_Nonnull)error;
- (nullable NSString *)URLForWebViewWithIdentifier:(NSNumber *)identifier
                                             error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)estimatedProgressForWebViewWithIdentifier:(NSNumber *)identifier
                                                           error:(FlutterError *_Nullable *_Nonnull)
                                                                     error;
- (void)loadRequestForWebViewWithIdentifier:(NSNumber *)identifier
                                    request:(BTNSUrlRequestData *)request
                                      error:(FlutterError *_Nullable *_Nonnull)error;
- (void)loadHTMLForWebViewWithIdentifier:(NSNumber *)identifier
                              HTMLString:(NSString *)string
                                 baseURL:(nullable NSString *)baseUrl
                                   error:(FlutterError *_Nullable *_Nonnull)error;
- (void)loadFileForWebViewWithIdentifier:(NSNumber *)identifier
                                 fileURL:(NSString *)url
                           readAccessURL:(NSString *)readAccessUrl
                                   error:(FlutterError *_Nullable *_Nonnull)error;
- (void)loadAssetForWebViewWithIdentifier:(NSNumber *)identifier
                                 assetKey:(NSString *)key
                                    error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)canGoBackForWebViewWithIdentifier:(NSNumber *)identifier
                                                   error:(FlutterError *_Nullable *_Nonnull)error;
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)canGoForwardForWebViewWithIdentifier:(NSNumber *)identifier
                                                      error:
                                                          (FlutterError *_Nullable *_Nonnull)error;
- (void)goBackForWebViewWithIdentifier:(NSNumber *)identifier
                                 error:(FlutterError *_Nullable *_Nonnull)error;
- (void)goForwardForWebViewWithIdentifier:(NSNumber *)identifier
                                    error:(FlutterError *_Nullable *_Nonnull)error;
- (void)reloadWebViewWithIdentifier:(NSNumber *)identifier
                              error:(FlutterError *_Nullable *_Nonnull)error;
- (nullable NSString *)titleForWebViewWithIdentifier:(NSNumber *)identifier
                                               error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setAllowsBackForwardForWebViewWithIdentifier:(NSNumber *)identifier
                                           isAllowed:(NSNumber *)allow
                                               error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setUserAgentForWebViewWithIdentifier:(NSNumber *)identifier
                                   userAgent:(nullable NSString *)userAgent
                                       error:(FlutterError *_Nullable *_Nonnull)error;
- (void)evaluateJavaScriptForWebViewWithIdentifier:(NSNumber *)identifier
                                  javaScriptString:(NSString *)javaScriptString
                                        completion:(void (^)(id _Nullable,
                                                             FlutterError *_Nullable))completion;
@end

extern void BTWKWebViewHostApiSetup(id<FlutterBinaryMessenger> binaryMessenger,
                                     NSObject<BTWKWebViewHostApi> *_Nullable api);

/// The codec used by BTWKUIDelegateHostApi.
NSObject<FlutterMessageCodec> *BTWKUIDelegateHostApiGetCodec(void);

@protocol BTWKUIDelegateHostApi
- (void)createWithIdentifier:(NSNumber *)identifier error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void BTWKUIDelegateHostApiSetup(id<FlutterBinaryMessenger> binaryMessenger,
                                        NSObject<BTWKUIDelegateHostApi> *_Nullable api);

/// The codec used by BTWKUIDelegateFlutterApi.
NSObject<FlutterMessageCodec> *BTWKUIDelegateFlutterApiGetCodec(void);

@interface BTWKUIDelegateFlutterApi : NSObject
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger;
- (void)onCreateWebViewForDelegateWithIdentifier:(NSNumber *)identifier
                               webViewIdentifier:(NSNumber *)webViewIdentifier
                         configurationIdentifier:(NSNumber *)configurationIdentifier
                                navigationAction:(BTWKNavigationActionData *)navigationAction
                                      completion:(void (^)(NSError *_Nullable))completion;
@end
/// The codec used by BTWKHttpCookieStoreHostApi.
NSObject<FlutterMessageCodec> *BTWKHttpCookieStoreHostApiGetCodec(void);

@protocol BTWKHttpCookieStoreHostApi
- (void)createFromWebsiteDataStoreWithIdentifier:(NSNumber *)identifier
                             dataStoreIdentifier:(NSNumber *)websiteDataStoreIdentifier
                                           error:(FlutterError *_Nullable *_Nonnull)error;
- (void)setCookieForStoreWithIdentifier:(NSNumber *)identifier
                                 cookie:(BTNSHttpCookieData *)cookie
                             completion:(void (^)(FlutterError *_Nullable))completion;
@end

extern void BTWKHttpCookieStoreHostApiSetup(id<FlutterBinaryMessenger> binaryMessenger,
                                             NSObject<BTWKHttpCookieStoreHostApi> *_Nullable api);

NS_ASSUME_NONNULL_END
